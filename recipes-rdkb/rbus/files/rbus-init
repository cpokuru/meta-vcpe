#!/bin/sh
### BEGIN INIT INFO
# Provides:          rbus
# Required-Start:    $local_fs $network $syslog
# Required-Stop:     $local_fs $network $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: RBus daemon
# Description:       Daemon for RDK RBus IPC system
### END INIT INFO

# Source function library
. /etc/init.d/functions

NAME="rbus"
DAEMON="/usr/bin/rtrouted"
PIDFILE="/var/run/rbus.pid"
DAEMON_ARGS=""

# Exit if the package is not installed
[ -x "$DAEMON" ] || exit 0

# Read configuration if present
[ -r /etc/default/$NAME ] && . /etc/default/$NAME

start() {
    echo -n "Starting $NAME: "
    if [ -f $PIDFILE ]; then
        pid=$(cat $PIDFILE)
        if [ -d /proc/$pid ]; then
            echo "Already running"
            return 1
        else
            rm -f $PIDFILE
        fi
    fi
    
    start-stop-daemon --start --quiet --pidfile $PIDFILE --exec $DAEMON -- $DAEMON_ARGS
    RETVAL=$?
    if [ $RETVAL -eq 0 ]; then
        echo "OK"
        # Store PID
        pid=$(pidof $DAEMON)
        echo $pid > $PIDFILE
    else
        echo "FAIL"
    fi
    return $RETVAL
}

stop() {
    echo -n "Stopping $NAME: "
    start-stop-daemon --stop --quiet --pidfile $PIDFILE
    RETVAL=$?
    if [ $RETVAL -eq 0 ]; then
        rm -f $PIDFILE
        echo "OK"
    else
        echo "FAIL"
    fi
    return $RETVAL
}

restart() {
    stop
    sleep 1
    start
}

status() {
    if [ -f $PIDFILE ]; then
        pid=$(cat $PIDFILE)
        if [ -d /proc/$pid ]; then
            echo "$NAME is running (pid $pid)"
            return 0
        else
            echo "$NAME is not running (stale pidfile)"
            return 1
        fi
    else
        echo "$NAME is not running"
        return 3
    fi
}

case "$1" in
    start)
        start
        ;;
    stop)
        stop
        ;;
    restart)
        restart
        ;;
    force-reload)
        restart
        ;;
    status)
        status
        ;;
    *)
        echo "Usage: $0 {start|stop|restart|force-reload|status}"
        exit 1
        ;;
esac

exit $RETVAL
